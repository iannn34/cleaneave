-- code for the initialization of the tables present in the database
-- tables present in the database are:
-- 1. users
-- 2. roles
-- 3. orders
-- 4. order_items
-- 5. products
-- 6. tokens

-- Drop the tables if they exist
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS roles CASCADE;
DROP TABLE IF EXISTS orders CASCADE;
DROP TABLE IF EXISTS order_items CASCADE;
DROP TABLE IF EXISTS products CASCADE;
DROP TABLE IF EXISTS tokens CASCADE;


-- Create a role table
CREATE TABLE roles(
    role_id SERIAL NOT NULL,
    name varchar(10) NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(role_id)
);

-- Insert default roles
INSERT INTO roles (name)
    VALUES ('staff'), ('customer'),('admin');

-- Create a user table
CREATE TABLE users(
    user_id SERIAL NOT NULL,
    name varchar(255) NOT NULL,
    email varchar(100) NOT NULL,
    password text NOT NULL,
    contact integer NOT NULL,
    role_id integer NOT NULL DEFAULT 2,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    verified boolean DEFAULT false,
    PRIMARY KEY(user_id),
    CONSTRAINT users_role_id_fkey FOREIGN key(role_id) REFERENCES roles(role_id)
);

-- Create a product table
CREATE TABLE products(
    product_id SERIAL NOT NULL,
    name varchar(255) NOT NULL,
    unit_price integer NOT NULL,
    description text NOT NULL,
    image_url text NOT NULL,
    PRIMARY KEY(product_id)
);
-- Create an order table
CREATE TABLE orders(
    order_id SERIAL NOT NULL,
    user_id integer NOT NULL,
    total_price integer NOT NULL,
    status varchar(50) NOT NULL DEFAULT 'pending'::character varying,
    pickup_time timestamp without time zone NOT NULL,
    delivery_time timestamp without time zone NOT NULL,
    location jsonb,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    handled_by integer,
    completed_on timestamp without time zone,
    received_on timestamp without time zone,
    PRIMARY KEY(order_id),
    CONSTRAINT orders_user_id_fkey FOREIGN key(user_id) REFERENCES users(user_id),
    CONSTRAINT orders_handled_by_fkey FOREIGN key(handled_by) REFERENCES users(user_id)
);

-- Create the order_items table
CREATE TABLE order_items(
    item_id SERIAL NOT NULL,
    order_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    total_unit_price integer NOT NULL,
    service text NOT NULL,
    PRIMARY KEY(item_id),
    CONSTRAINT order_items_order_id_fkey FOREIGN key(order_id) REFERENCES orders(order_id),
    CONSTRAINT order_items_product_id_fkey FOREIGN key(product_id) REFERENCES products(product_id)
);
-- Create a token table
-- Generated by the database client.
CREATE TABLE tokens(
    token_id SERIAL NOT NULL,
    token text NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    expires_at timestamp without time zone DEFAULT (CURRENT_TIMESTAMP + '03:00:00'::interval),
    user_id integer DEFAULT 0,
    PRIMARY KEY(token_id),
    CONSTRAINT tokens_user_id_fkey FOREIGN key(user_id) REFERENCES users(user_id)
);